@model IEnumerable<SPDS.Models.theDatabase>
@{
    ViewBag.Title = "View_Data";
}

@using (Html.BeginForm("Index", "Home", FormMethod.Get))
{
    //The following are the search options
    <b>Search Option:</b>
    @Html.RadioButton("option", "Name") <text>Name</text>
    @Html.RadioButton("option", "Ion") <text> Ion </text>
    @Html.RadioButton("option", "Projectile")<text>Projectile</text>
    @Html.RadioButton("option", "Mass")<text>Mass</text>
    @Html.TextBox("search") <input type="submit"
                                   name="submit" value="Search" />
}

<div class="content">
    <h1>VIEW DATA</h1>

    <style>
        table {
            border-spacing: 0;
            margin-left: 5%;      
        }
        table, td, th{ 
            border: 1px solid black;
            font-family:"Verdana";
        }
        th {
            color: white;
            background-color: black;
            font-style: oblique;
        }
    </style>

    <div class="mainFill">Here you are able to view the collected data present in the database</div>

    

    <div class="graph">
        <canvas id="canvas" height="450" width="600"></canvas>
        <script>
            var Xpoints = [1, 2, 3, 4, 5, 6, 7];
            var Ypoints = [2, 3, 5, 8, 4, 4, 8];
            var graphdisplay = new chartline();
            graphdisplay.drawLineGraph(Xpoints, Ypoints, "canvas")
        </script>
        <div class="table">
            <script>
                var data = [["power", "length", "Energy"], [1, 2, 3], [2, 3, 5], [3, 5, 8], [4, 8, 12], [5, 4, 9], [6, 4, 10], [7, 8, 15]];
            var table = new TableClass();
            table.createTable(data);
            </script>
        </div>
    </div>

@* Here is the implemented table for the data - NOT FINISHED*@
    <table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Ion)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Projectile)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Mass)
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayNameFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayNameFor(modelItem => item.Ion)
                </td>
                <td>
                    @Html.DisplayNameFor(modelItem => item.Projectile)
                </td>
                <td>
                    @Html.DisplayNameFor(modelItem => item.Mass)
                </td>
            </tr>
        }

    </table>


</div>