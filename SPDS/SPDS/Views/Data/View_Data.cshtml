@model SPDS.Models.ViewDataViewModel
@{
    ViewBag.Title = "View_Data";
}



<div class="content">

    <h1>VIEW DATA</h1>


    <div class="mainFill">Here you are able to view the collected data present in the database</div>

    <div class="viewDataWrapper">

        <div class="search">

            <h2>SEARCH DATABASE</h2>

            @using (Html.BeginForm())
            {
                //The following are the search options
                <fieldset>
                    <legend><span class="number">1</span>Enter Projectile</legend>
                    @Html.TextBoxFor(m => m._projectile, new { @class = "searchInput" })
                </fieldset>

                <fieldset>
                    <legend><span class="number">2</span>Enter Target</legend>
                    @Html.TextBoxFor(m => m._targetMaterial, new { @class = "searchInput" })
                </fieldset>

                <div class="hiddenOptions">
                    <label class="optionsToggle" onclick="toggle('box');">
                        Show all search options
                    </label>

                    <fieldset>
                        <legend><span class="number">3</span>Advanced Search Options</legend>
                        <fieldset>
                            <label class="subLegend">State of Aggregation:</label>
                            @Html.RadioButtonFor(m => m._stateOfAggregation, "Gaseous")
                            <label class="SoALabel">Gaseous</label>
                            @Html.RadioButtonFor(m => m._stateOfAggregation, "Condensed")
                            <label class="SoALabel">Condensed</label>
                            <label class="subLegend">Show only reviewed data:</label>
                            @Html.CheckBoxFor(m => m._showReviewed)


                        </fieldset>

                     
                    </fieldset>

                   
                </div>

                <input type="submit" class="submitBtn" value="Search" />


            }
        </div>





        <div class="graph">





            <canvas id="canvas" height="450" width="600"></canvas>
            <script>
                var Xpoints = [1, 2, 3, 4, 5, 6, 7];
                var Ypoints = [2, 3, 5, 8, 4, 4, 8];
                var graphdisplay = new chartline();
                graphdisplay.drawLineGraph(Xpoints, Ypoints, "canvas")
            </script>
            <div class="table">
                <script>
                    var data = [["power", "length", "Energy"], [1, 2, 3], [2, 3, 5], [3, 5, 8], [4, 8, 12], [5, 4, 9], [6, 4, 10], [7, 8, 15]];
                    var table = new TableClass();
                    table.createTable(data);
                </script>
            </div>
        </div>
    </div>
    <script>
        var uri = 'api/format/twoddataarray';

        $(document).ready(function () {
            $.getJSON(uri)
                .done(function (data) {

    @* Here is the implemented table for the data - NOT FINISHED*@
    @*<table class="table">
            <tr>
                <th>
                    @Html.DisplayNameFor(Model => Model.Id)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Id)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Id)
                </th>
                <th></th>
            </tr>

           @foreach (var item in Model)
        {
            <tr>
                @* <td>
            @Html.DisplayFor(modelItem => item.User)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.TargetMaterial)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Id)
                </td>
            </tr>
        }

        </table>*@



                    var graph = new graph();

                    graph.drawGraph(data, '#chartcontainer');
                });
        });
    </script>
</div>