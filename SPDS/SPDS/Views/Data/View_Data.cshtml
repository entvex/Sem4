@model SPDS.Models.ViewDataViewModel
@{
    ViewBag.Title = "View_Data";
}


@*jquery to show or hide search options -- move to script file!*@
<script>
    $(function () {
        $("#toggleOptions").click(function () {
            $(".hiddenOptions").slideToggle(200);
            if ($(this).val() == "Show search options") {
                $(this).val("Hide search options");
            }
            else {
                $(this).val("Show search options");
            };
        });
    });
</script>


<div class="content">
    <h1>VIEW DATA</h1>
    <div class="mainFill">Here you are able to view the collected data present in the database</div>
    <div class="viewDataWrapper">
        <div class="search">
            <h2>SEARCH DATABASE</h2>
            @using (Html.BeginForm())
            {
                //The following are the search options
                <fieldset>
                    <legend><span class="number">1</span>Enter Projectile</legend>
                    @Html.TextBoxFor(m => m._projectile, new { @class = "searchInput" })
                </fieldset>
                <fieldset>
                    <legend><span class="number">2</span>Enter Target</legend>
                    @Html.TextBoxFor(m => m._targetMaterial, new { @class = "searchInput" })
                </fieldset>
                <input type="button" id="toggleOptions" value="Show search options" />
                <div id="options" class="hiddenOptions">
                    <fieldset>
                        <legend><span class="number">3</span>Advanced Search Options</legend>
                        <fieldset>
                            <label class="subLegend">Physical State:</label>
                            <label class="SoALabel">Gaseous:</label>
                            @Html.CheckBoxFor(m => m._gaseous, new { @class = "SoAChkBox", @checked = "checked" })
                            <label class="SoALabel">Condensed:</label>
                            @Html.CheckBoxFor(m => m._condensed, new { @class = "SoAChkBox", @checked = "checked" })
                            <label class="subLegend" id="showReviewedLabel">Show only reviewed data:</label>
                            @Html.CheckBoxFor(m => m._showReviewed, new { @class = "ShowReviewedChkBox", @checked = "checked" })
                            <label class="subLegend">Energy Max:</label>
                            @Html.CheckBoxFor(m => m._energyMax, new { @class = "EnergyMax", @checked = "checked" })
                            <label class="subLegend">Energy Min:</label>
                            @Html.CheckBoxFor(m => m._energyMin, new { @class = "EnergyMin", @checked = "checked" })
                            <label class="subLegend">Author:</label>
                            @Html.TextBoxFor(m => m._showReviewed, new { @class = "Author" })
                            <label class="subLegend">Year:</label>
                            @Html.TextBoxFor(m => m._year, new { @class = "Year"})
                            <label class="subLegend">DOI:</label>
                            @Html.TextBoxFor(m => m._doi, new { @class = "DOI" })
                            <label class="subLegend">Methods:</label>
                            @{ 
                                List<SelectListItem> methods = new List<SelectListItem>();
                                methods.Add(new SelectListItem
                                {
                                    Text = "Transmission",
                                    Value = "Transmission"
                                });
                                methods.Add(new SelectListItem
                                {
                                    Text = "Gaseous Transmission",
                                    Value = "Gaseous Transmission"
                                });
                                methods.Add(new SelectListItem
                                {
                                    Text = "Reflection",
                                    Value = "Reflection"
                                });
                                methods.Add(new SelectListItem
                                {
                                    Text = "Rutherford Backscattering",
                                    Value = "Rutherford Backscattering"
                                });
                                methods.Add(new SelectListItem
                                {
                                    Text = "All",
                                    Value = "All",
                                    Selected = true
                                });
                            }
                            @Html.DropDownListFor(m => m._methods, methods, new { @class = "Methods" })
                        </fieldset>
                    </fieldset>
                </div>
                <input type="submit" class="submitBtn" value="Search" />
            }
        </div>


        <div class="graph">
           <div id="container" style="min-width: 310px; height: 400px; margin: 0 auto"></div>   
		    <script>
				var randomarray = [[1,2],[2,3],[3,6]];
				var graf = new graph();
				graf.drawGraph(randomarray,"container","View SPDS data","Target Material: " + "Projectile: ");


            </script>
			</div>
        @*     <div class="table">
        <script>
            var data = [["power", "length", "Energy"], [1, 2, 3], [2, 3, 5], [3, 5, 8], [4, 8, 12], [5, 4, 9], [6, 4, 10], [7, 8, 15]];
            var table = new TableClass();
            table.createTable(data);
        </script>
        </div> *@
        
    </div>
    @*This table is for serach functions returned data*@
    @*The table needs a connection to the controller*@
    <table id="searchResultTable"class="DataSetTable">
        @if (Model != null)
        {
            <thead>
            <tr>
                <th>Target Material</th>
                <th>Projectile Material</th>
                <th>Physical State</th>
                <th>DOI Number</th>
               @* <th>Minimum Energy</th> -- Missing implementation
    <th>Maximum Energy</th>*@
                <th>Method</th>
                <th>First Author</th>
                <th>Year</th>
                <th>View All Metadata</th>
                <th>View on Graph</th>
            </tr>
            <tfoot>
                <tr>
                    <th>Target Material</th>
                    <th>Projectile Material</th>
                    <th>Physical State</th>
                    <th>DOI Number</th>
                    @*<th>Minimum Energy</th> -- Missing implementation
    <th>Maximum Energy</th>*@
                    <th>Method</th>
                    <th>First Author</th>
                    <th>Year</th>
                    <th>View All Metadata</th>
                    <th>View on Graph</th>
                </tr>
            </tfoot>

            </thead>

            Html.Raw("<tbody>");
            foreach (var item in Model._foundDataSets)
            {
                <tr>
                    <td>@item.TargetMaterial.Name</td>
                    <td>@item.Projectile.Name</td>
                    <td>@item.StateOfAggregation.Form</td>
                    <td>@item.ArticleReferences.DOINumber</td>
                    @*Implementation of Minimum Energy missing*@
                    @*Implementation of Maximum Energy missing*@
                    <td>@item.Method.Name</td>
                    <td>@item.ArticleReferences.Firstname</td>
                    <td>@item.ArticleReferences.Year</td>
                    <td>
                        <button type="button" onclick="alert('@item.Projectile.Name, @item.TargetMaterial.Name')">Click Me!</button>
                    </td>
                    <td>
                        <button type="button" onclick="alert('VIEW ON GRAPH')">Click Me!</button>
                    </td>
                    
                </tr>
            }
            Html.Raw("</tbody>");

        }
    </table>

</div>